from aiogram import Bot, Dispatcher, executor, types
from datetime import datetime, timedelta
import os

API_TOKEN = os.getenv("BOT_TOKEN")  # –£–∫–∞–∂–∏ –∑–¥–µ—Å—å —Å–≤–æ–π —Ç–æ–∫–µ–Ω

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –§–æ—Ç–æ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ file_id –∏–ª–∏ URL)
PHOTO_PATHS = {
    "–§–µ–¥—è": "photos/fedya.jpg",
    "–ë–æ–±—ã": "photos/boby.jpg",
    "–ú–µ—Ç–∞–ª–ª": "photos/metall.jpg"
}

# –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç
ITEMS = {
    "–§–µ–¥—è": [("1 –≥", 2790), ("2 –≥", 4790), ("3 –≥", 7990)],
    "–ë–æ–±—ã": [("1 –≥", 2190), ("2 –≥", 2990), ("3 –≥", 3990)],
    "–ú–µ—Ç–∞–ª–ª": [("1 –≥", 1490), ("2 –≥", 2490), ("3 –≥", 3490)]
}

# –ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ –±–ª–∏–∂–∞–π—à–µ–π –ø–æ–ª—É—á–∞—Å–æ–≤–∫–µ
def get_actual_time():
    now = datetime.now()
    rounded_minute = 30 if now.minute >= 30 else 0
    actual_time = now.replace(minute=rounded_minute, second=0, microsecond=0)
    return actual_time.strftime("%d.%m.%Y –≤ %H:%M")

# –°—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
@dp.message_handler(commands=['start'])
async def send_welcome(message: types.Message):
    text = "<b>üç¨ –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç:</b>\n"
    for item, variants in ITEMS.items():
        text += f"\n<b>{item}</b>\n"
        for name, price in variants:
            text += f"‚Ä¢ {name} ‚Äî {price} ‚ÇΩ\n"
    text += f"\nüì¶ –ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞: <i>{get_actual_time()}</i>"

    buttons = [
        [types.KeyboardButton("üõí –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑")],
        [types.KeyboardButton("üì∏ –§–æ—Ç–æ —Å–æ —Å–∫–ª–∞–¥–∞"), types.KeyboardButton("üí¨ –°–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º")]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    await message.answer(text, reply_markup=keyboard, parse_mode="HTML")

# –û—Å—Ç–∞–ª—å–Ω—ã–µ —Ö–µ–Ω–¥–ª–µ—Ä—ã (–∑–∞–∫–∞–∑, —Ñ–æ—Ç–æ, –∞–¥–º–∏–Ω) –º–æ–∂–Ω–æ –¥–æ–ø–∏—Å–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ

if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)